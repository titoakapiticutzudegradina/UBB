     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  ;a-b+7-(c+d)
    13                                  segment data use32 class=data
    14 00000000 2C01                    a dw 300
    15 00000002 0A                      b db 10
    16 00000003 F401                    c dw 500
    17 00000005 09                      d db 9
    18 00000006 00000000                r dd 0
    19                                      ; ...
    20                                  
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 66A1[00000000]              mov ax, [a]
    25 00000006 660FB61D[02000000]          movzx bx, [b]
    26 0000000E 6629D8                      sub ax,bx
    27 00000011 6683C007                    add ax,7
    28 00000015 668B0D[03000000]            mov cx,[c]
    29 0000001C 660FB615[05000000]          movzx dx,[d]
    30 00000024 6601D1                      add cx,dx
    31 00000027 6629C8                      sub ax, cx
    32 0000002A A3[06000000]                mov [r],eax
    33                                      ; ...
    34                                      
    35                                          ; exit(0)
    36 0000002F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 00000031 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
